@page "/cities/create/{StateId:int}"
@inject IRepository repository;
@inject NavigationManager navigationManager;
@inject SweetAlertService sweetAlertService;
@attribute [Authorize(Roles = "Admin")];


<h3>Crear Ciudad</h3>

<CityForm @ref="cityForm" city="city" OnValidSubmit="Create" ReturnAction="Return"></CityForm>
@code {
    private City city = new();
    private CityForm? cityForm;
    [Parameter]
    public int StateId { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;



    private async Task Create()
    {
        city.StateId = StateId;
        var httpResponse = await repository.Post("/api/cities", city);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
    }

    private void Return()
    {
        cityForm!.FormPostedSuccesfully = true;
        navigationManager.NavigateTo($"/states/details/{StateId}");
    }
}


