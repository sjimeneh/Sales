@page "/category/create"
@inject IRepository repository;
@inject NavigationManager navigationManager;
@inject SweetAlertService sweetAlertService; 

<h3>Crear Categoría</h3>

<CategoryForm @ref="categoryForm" category="category" OnValidSubmit="Create" ReturnAction="Return"></CategoryForm>
@code {
    private Category category = new();
    private CategoryForm? categoryForm;

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;



    private async Task Create()
    {
        var httpResponse = await repository.Post("/api/categories", category);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
    }

    private void Return()
    {
        categoryForm!.FormPostedSuccesfully = true;
        navigationManager.NavigateTo("/categories");
    }
}
